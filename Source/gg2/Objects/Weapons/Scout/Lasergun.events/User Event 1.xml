<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="OTHER" id="11">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if(readyToShoot == true &amp;&amp; !owner.cloak &amp;&amp; ammoCount &gt; 0) {
    playsound(x,y,FlashlightSnd);
    shot=true;
    justShot=true;        
    readyToShoot = false;
    alarm[5] = reloadTime+reloadBuffer;
    alarm[0] = refireTime;
    ammoCount-=1;
    
    var hit i;
    
    for(i=0;i&lt;3;i+=1) {
        var x1,y1,xm,ym, len;
        var hitline;
        len=400;
        x1=x;
        y1=y;
        a[i]=x+lengthdir_x(len,owner.aimDirection-3+i*3);
        b[i]=y+lengthdir_y(len,owner.aimDirection-3+i*3);
        
        while(len&gt;1) {
            xm=(x1+a[i])/2;
            ym=(y1+b[i])/2;
            
            hitline = false;
            with(owner) {
                if (collision_line(x1,y1,xm,ym,Generator,true,true)&gt;=0) {
                    hitline = true;
                    if instance_nearest(x1,y1,Generator).team == team hitline = false;
                }
                if(collision_line(x1,y1,xm,ym,Obstacle,true,true)&gt;=0) {
                    hitline = true;
                } else if (collision_line(x1,y1,xm,ym,Character,true,true)&gt;=0) {
                    hitline = true;
                } else if (collision_line(x1,y1,xm,ym,Sentry,true,false)&gt;=0) {
                    hitline = true;
                } else if (collision_line(x1,y1,xm,ym,TeamGate,true,true)&gt;=0) {
                    hitline = true;
                } else if (collision_line(x1,y1,xm,ym,IntelGate,true,true)&gt;=0) {
                    hitline = true;
                } else if (collision_line(x1,y1,xm,ym,ControlPointSetupGate,true,true)&gt;=0) {
                    if ControlPointSetupGate.solid == true hitline = true;
                } else if (collision_line(x1,y1,xm,ym,BulletWall,true,true)&gt;=0) {
                    hitline = true;
                }
            }
            
            if(hitline) {
                a[i]=xm;
                b[i]=ym;
            } else {
                x1=xm;
                y1=ym;
            }
            len/=2;
        }
        
        with(Player) {
            if(id != other.ownerPlayer and team != other.owner.team and object != -1) {
                if(collision_line(other.x,other.y,other.a[i],other.b[i],object,true,false)&gt;=0) &amp;&amp; object.ubered == 0 {
                    if object.radioactive {
                        var text;
                        text=instance_create(x,y,Text);
                        text=sprite_index = MissS
                    } else {
                        if !object.invincible object.hp -= other.hitDamage*(1+object.pissed*0.35)*1*other.crit;
                        object.lastDamageCrit=other.crit;
                        object.timeUnscathed = 0;
                        if (object.lastDamageDealer != other.ownerPlayer &amp;&amp; object.lastDamageDealer != object.player){
                            object.secondToLastDamageDealer = object.lastDamageDealer;
                            object.alarm[4] = object.alarm[3]
                        }
                        object.alarm[3] = ASSIST_TIME;
                        object.lastDamageDealer = other.ownerPlayer;
                        object.cloakAlpha = min(object.cloakAlpha + 0.3, 1);
                    if(global.gibLevel &gt; 0){
                        blood = instance_create(object.x,object.y,Blood);
                        blood.direction = other.owner.aimDirection-180;
                    }
                    object.lastDamageSource = WEAPON_FLASHLIGHT;
                    }
                }
            }
        }
        
        with(Sentry) {
            if(team != other.owner.team) {
                if(collision_line(other.x,other.y,other.a[i],other.b[i],id,false,false)&gt;=0) {
                    hp -= other.hitDamage*CRIT_FACTOR;
                    lastDamageCrit=CRIT_FACTOR;
                    lastDamageDealer = other.ownerPlayer;
                    lastDamageSource = WEAPON_FLASHLIGHT;
                }
            }
        }
        
        with(Generator) {
            if(team != other.owner.team) {
                if(collision_line(other.x,other.y,other.a[i],other.b[i],id,true,false)&gt;=0) {
                    alarm[0] = regenerationBuffer;
                    isShieldRegenerating = false;
                    //allow overkill to be applied directly to the target
                    if (other.hitDamage &gt; shieldHp) {
                        hp -= other.hitDamage - shieldHp;
                        hp -= shieldHp * shieldResistance;
                        shieldHp = 0;
                    }
                    else
                    {
                        hp -= other.hitDamage * shieldResistance;
                        shieldHp -= other.hitDamage;
                    }
                    //exit;
                }
            }
        }
    }
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
