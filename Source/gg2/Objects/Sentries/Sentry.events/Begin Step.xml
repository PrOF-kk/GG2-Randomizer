<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="1">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if team != ownerPlayer.team || collision_circle(x,y+10,25,Sentry,false,true)&gt;=0 &amp;&amp; global.isHost {
    sendEventDestruction(ownerPlayer, -1, -1, WEAPON_TOOLBOX,1);
    doEventDestruction(ownerPlayer, -1, -1, WEAPON_TOOLBOX,1);
}
if global.isHost {
    if ownerPlayer.object == -1 {
        if !((ownerPlayer.loaded1 &gt;= WEAPON_NAILGUN &amp;&amp; ownerPlayer.loaded1 &lt;= WEAPON_EUREKAEFFECT) or (ownerPlayer.loaded2 &gt;= WEAPON_NAILGUN &amp;&amp; ownerPlayer.loaded2 &lt;= WEAPON_EUREKAEFFECT)) {
            sendEventDestruction(ownerPlayer, -1, -1, WEAPON_TOOLBOX,1);
            doEventDestruction(ownerPlayer, -1, -1, WEAPON_TOOLBOX,1);
        }
    } else if !((ownerPlayer.object.loaded1 &gt;= WEAPON_NAILGUN &amp;&amp; ownerPlayer.object.loaded1 &lt;= WEAPON_EUREKAEFFECT) or (ownerPlayer.object.loaded2 &gt;= WEAPON_NAILGUN &amp;&amp; ownerPlayer.object.loaded2 &lt;= WEAPON_EUREKAEFFECT)) {
        sendEventDestruction(ownerPlayer, -1, -1, WEAPON_TOOLBOX,1);
        doEventDestruction(ownerPlayer, -1, -1, WEAPON_TOOLBOX,1);
    }
}
if built == 0 &amp;&amp; vspeed == 0 &amp;&amp; sapped &lt;= 0 {

    building+=buildspeed;
    switch(level) {
        case 0:
            if hp &lt; maxHp &amp;&amp; spareHp &gt;= 0.76 {
                hp+=0.76*buildspeed;
                spareHp-=0.76*buildspeed;
            }
            if building &gt;= 99 {
                built = 1;
                building = 0;
            }
            image_index = floor(building*0.08);
            break;
        case 1:
            if hp &lt; maxHp &amp;&amp; spareHp &gt;= 0.96 {
                hp+=0.96*buildspeed;
                spareHp-=0.96*buildspeed;
            }
            if building &gt;= 99 {
                built = 1;
                building = 0;
            }
            image_index = floor(building*0.11);
            break;
        case 2:
            if hp &lt; maxHp &amp;&amp; spareHp &gt;= 1.27 {
                hp+=1.27*buildspeed;
                spareHp-=1.27*buildspeed;
            }
            if building &gt;= 99 {
                built = 1;
                building = 0;
            }
            image_index = floor(building*0.11);
            break;
        case 5:
            if hp &lt; maxHp &amp;&amp; spareHp &gt;= 0.4 {
                hp+=0.4*buildspeed;
                spareHp-=0.4*buildspeed;
            }
            if building &gt;= 149 {
                built = 1;
                building = 0;
            }
            image_index = floor(building*0.1);
            break;
        default:
            if hp &lt; maxHp &amp;&amp; spareHp &gt;= 1.13 {
                hp+=1.13*buildspeed;
                spareHp-=1.13*buildspeed;
            }
            if building &gt;= 49 {
                built = 1;
                building = 0;
            }
            image_index = floor(building*0.16);                
    }

    if landed == 0 {
        landed = 1;
        playsound(x,y,SentryFloorSnd);
        playsound(x,y,SentryBuildSnd);
    }  
} else if sapped &gt; 0{
    if currentWeapon != -1 with(currentWeapon) instance_destroy();
    currentWeapon = -1;
    hp -= 1;
    if sapindex &lt; 1 sapindex+=0.33;
    else sapindex = 0;
    if(alarm[3]&lt;=0) {
        loopsoundstart(x,y,SapSound);
    } else {
        loopsoundmaintain(x,y,SapSound);
    }
    alarm[3]=2;
}
if (built == 1 &amp;&amp; currentWeapon == -1 &amp;&amp; !sapped) {
    if level == 0 or level == 3 or level == 4 image_index = 8;
    else if level == 5 image_index = 15;
    else image_index=11;
    image_speed=0;
    //hp=maxHp;
    if level != 5 {
        currentWeapon = instance_create(x,y,weapons[level]);
        currentWeapon.ownerPlayer=ownerPlayer;
        currentWeapon.team=team;
        currentWeapon.startDirection=startDirection;
        with(currentWeapon) {
            event_user(0);
        }
    }
} else if built == 0 &amp;&amp; currentWeapon != -1 {
    if instance_exists(currentWeapon) with(currentWeapon) {instance_destroy();};
    currentWeapon = -1;
}

if (humiliated == 1 &amp;&amp; built == 1 &amp;&amp; currentWeapon != -1) {
    event_user(1);
}
    
if(place_free(x,y+1)) {
    vspeed += 0.6;
}

if(vspeed&gt;10) {
    vspeed=10;
}

</argument>
      </arguments>
    </action>
  </actions>
</event>
