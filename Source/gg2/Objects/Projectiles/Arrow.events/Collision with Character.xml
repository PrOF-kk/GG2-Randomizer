<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="COLLISION" with="Character">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">    if(other.id != ownerPlayer.object and other.team != team  &amp;&amp; other.hp &gt; 0 &amp;&amp; other.ubered == 0 &amp;&amp; attached == -1) {
        if other.radioactive {
            var text;
            text=instance_create(x,y,Text);
            text.sprite_index = MissS
            instance_destroy();
            exit;
        }
        if burning &gt;= 1 &amp;&amp; !other.invincible {
            with(other) {
                if(!object_is_ancestor(object_index, Pyro) &amp;&amp; !invincible) {
                    if (burnDuration &lt; maxDuration) {
                        burnDuration += 30*6; 
                        burnDuration = min(burnDuration, maxDuration);
                    }
                    if (burnIntensity &lt; maxIntensity) {
                        burnIntensity += other.burnIncrease * 3;
                        burnIntensity = min(burnIntensity, maxIntensity);
                    }
                    burnedBy = other.helper;
                    afterburnSource = WEAPON_FIREARROW;
                    alarm[0] = decayDelay;
                }
            }
        }

            if !other.invincible other.hp -= hitDamage*(speed/2.55)*(1+other.pissed*0.35)*crit+burning*8;
            attached = other.id;
            xoffset=x-other.x;
            yoffset=y-other.y;
            alarm[0]=-1;
            speed=0;
            dir = direction;
            scale=image_xscale*other.image_xscale;
            depth=1;
            other.timeUnscathed = 0;
            if !burning {
                if (other.lastDamageDealer != ownerPlayer &amp;&amp; other.lastDamageDealer != other.player){
                    other.secondToLastDamageDealer = other.lastDamageDealer;
                    other.alarm[4] = other.alarm[3]
                }
                other.alarm[3] = ASSIST_TIME;
            } else {
                other.secondToLastDamageDealer = helper;
                other.alarm[4] = other.alarm[3]
                other.alarm[3] = ASSIST_TIME;
            }
            other.lastDamageDealer = ownerPlayer;
            other.lastDamageSource = weapon;
            other.lastDamageCrit = crit;
            var blood;
            if(global.gibLevel &gt; 0){
                blood = instance_create(x,y,Blood);
                blood.direction = direction-180;
                }
            
            with(other) {
                motion_add(other.direction, other.speed*0.2);
                cloakAlpha = min(cloakAlpha + 0.3, 1);    
                }
        }

</argument>
      </arguments>
    </action>
  </actions>
</event>
