<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="DRAW" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">xoffset = view_xview[0];
yoffset = view_yview[0];
xsize = view_wview[0];
ysize = view_hview[0];
    
var xr, yr;
xr = round(x);
yr = round(y);

if intel &amp;&amp; global.particles == PARTICLES_NORMAL {
    if old_pos[0,0]==-1 {
        a = 0
        while a &lt; 30 {
            old_pos[a,0] = x;
            old_pos[a,1] = y;  
            a += 1;
        }
    }
    a = 30-1
    while a &gt; 0 {
        old_pos[a,0] = old_pos[a-1,0]
        old_pos[a,1] = old_pos[a-1,1]        
        a -= 1
    }      
    
    if player.team == TEAM_RED color = c_red;
    else color = c_blue;
     
    old_pos[0,0] = x
    old_pos[0,1] = y   
    if distance_to_point(xoffset+xsize/2,yoffset+ysize/2) &gt; 800 exit;
        a = 0
        while a &lt; 30-1 {
            draw_set_alpha(0.2)
            draw_line_width_color(old_pos[a,0], old_pos[a,1]-4, old_pos[a+1,0], old_pos[a+1,1]-4, 2,color,color);
            draw_set_alpha(0.4)
            draw_line_width_color(old_pos[a,0], old_pos[a,1]-2, old_pos[a+1,0], old_pos[a+1,1]-2, 2,color,color);
            draw_set_alpha(0.6)
            draw_line_width_color(old_pos[a,0], old_pos[a,1]-0, old_pos[a+1,0], old_pos[a+1,1]-0, 2,color,color);
            draw_line_width_color(old_pos[a,0], old_pos[a,1]+2, old_pos[a+1,0], old_pos[a+1,1] +2, 2,color,color);
            draw_set_alpha(0.4)
            draw_line_width_color(old_pos[a,0], old_pos[a,1]+4, old_pos[a+1,0], old_pos[a+1,1] +4, 2,color,color);
            draw_set_alpha(0.2)
            draw_line_width_color(old_pos[a,0], old_pos[a,1]+6, old_pos[a+1,0], old_pos[a+1,1] +6, 2,color,color);
        a += 1;
    }   
}

if distance_to_point(xoffset+xsize/2,yoffset+ysize/2) &gt; 800 exit;

if global.myself == -1 &amp;&amp; cloakAlpha==1{
    image_alpha = 1;
} else if((global.myself.object == id &amp;&amp; cloakAlpha==1) || (global.myself.object == -1)) {
    image_alpha = 1;
} else if (!invisible) {
    image_alpha = cloakAlpha;
} else {
    exit;
}
   
if global.myself.team == team &amp;&amp; cloakAlpha&lt;0.5 {
    if currentWeapon.readyToStab==true or !stabbing {
        cloakAlpha=0.5;
        image_alpha=0.5;
    }
}
    
if team == global.myself.team &amp;&amp; (id != global.myself.object.id || global.showHealthBar == 1){
    draw_set_alpha(1);
    draw_healthbar(xr-10, yr-30, xr+10, yr-25,hp*100/maxHp,c_black,c_red,c_green,0,true,true);
}    
if(distance_to_point(mouse_x, mouse_y)&lt;25) {
    if cloak &amp;&amp; team!=global.myself.team exit;
    draw_set_alpha(1);
    draw_set_halign(fa_center);
    draw_set_valign(fa_bottom);
    if(team==TEAM_RED) {
        draw_set_color(c_red);
    } else {
        draw_set_color(c_blue);
    }
draw_text(xr, yr-35, player.name);
//draw_text(xr, yr-55, string(weapon_index)); (debugging)
}  

draw_set_alpha(1);
if team == TEAM_RED ubercolour = c_red;
if team == TEAM_BLUE ubercolour = c_blue;

if !buffing {   
    if omnomnomnom == true {
        if choconom draw_sprite_ext(ChocolateNomS,omnomnomnomindex,xr,yr,image_xscale,image_yscale,image_angle,c_white,1);
        else draw_sprite_ext(OmnomnomnomS,omnomnomnomindex,xr,yr,image_xscale,image_yscale,image_angle,c_white,1);
        if pissed draw_sprite_ext(sprite_index,floor(animationImage+animationOffset),xr,yr,image_xscale,image_yscale,image_angle,c_yellow,0.7);
        if ubered == 1 draw_sprite_ext(OmnomnomnomS,omnomnomnomindex,xr,yr,image_xscale,image_yscale,image_angle,ubercolour,0.7);
    }
    else if taunting == true{
        draw_sprite_ext(tauntSprite,tauntindex,xr,yr,image_xscale,image_yscale,image_angle,c_white,1);
        if pissed draw_sprite_ext(tauntSprite,tauntindex,xr,yr,image_xscale,image_yscale,image_angle,c_yellow,0.7);
        if ubered == 1 draw_sprite_ext(tauntSprite,tauntindex,xr,yr,image_xscale,image_yscale,image_angle,ubercolour,0.7);
        else if player.class == CLASS_PYRO &amp;&amp; weapon_index == 65 {
            if currentWeapon.critting &gt; 0 {
                if player.team == TEAM_RED ubercolour = c_orange;
                else  ubercolour = c_aqua;
                draw_sprite_ext(PhlogGlowverlay,tauntindex,xr,yr,image_xscale,image_yscale,image_angle,ubercolour,0.7);
                if glowindex &lt; 9 glowindex += 0.3
                else glowindex = 0;
                draw_sprite_ext(CritGlowS,floor(glowindex),xr,yr,image_xscale,image_yscale,image_angle,ubercolour,0.7);
            }
        }            
    }
    else if (player.humiliated &amp;&amp; !player.RandomizerWinner) or stunned {
        draw_sprite_ext(humiliationPoses,floor(animationImage)+humiliationOffset,xr,yr,image_xscale,image_yscale,image_angle,c_white,cloakAlpha);
        if pissed draw_sprite_ext(humiliationPoses,floor(animationImage)+humiliationOffset,xr,yr,image_xscale,image_yscale,image_angle,c_yellow,cloakAlpha);
    }
    else if taunting == false {
        if ubered == 0 &amp;&amp; megaHealed == 0 {
            if buffbanner draw_sprite_ext(BackpackS,team,xr,yr,image_xscale,1,0,c_white,cloakAlpha);
            if hasDangershield draw_sprite_ext(DangerShieldS,team,xr,yr,image_xscale,1,0,c_white,cloakAlpha);
            if hasRazorback draw_sprite_ext(RazorBackS,team,xr,yr,image_xscale,1,0,c_white,cloakAlpha);             
            draw_sprite_ext(sprite_index,floor(animationImage+animationOffset),xr,yr,image_xscale,image_yscale,image_angle,c_white,cloakAlpha);
            if pissed draw_sprite_ext(sprite_index,floor(animationImage+animationOffset),xr,yr,image_xscale,image_yscale,image_angle,c_yellow,0.7);
            if hasBoots draw_sprite_ext(SniperBootsS,floor(animationImage)+team*2,xr,yr,image_xscale,1,0,c_white,cloakAlpha);
            if weapon_index == WEAPON_PHLOG {
                if currentWeapon.critting &gt; 0 {
                    if player.team == TEAM_RED ubercolour = c_orange;
                    else  ubercolour = c_aqua;
                    if glowindex &lt; 9 glowindex += 0.3
                    else glowindex = 0;
                    draw_sprite_ext(CritGlowS,floor(glowindex),xr,yr,image_xscale,image_yscale,image_angle,ubercolour,0.7);
                }
            } else if buffbanner {
                if player.team == TEAM_RED ubercolour = c_orange;
                else  ubercolour = c_aqua;
                if glowindex &lt; 9 glowindex += 0.3
                else glowindex = 0;
                draw_sprite_ext(CritGlowS,floor(glowindex),xr,yr,image_xscale,image_yscale,image_angle,ubercolour,0.7);
            }
        } else if (ubered == 1 or megaHealed == 1) &amp;&amp; !invisibeam {
            if buffbanner draw_sprite_ext(BackpackS,team,xr,yr,image_xscale,1,0,ubercolour,1);
            if hasDangershield draw_sprite_ext(DangerShieldS,team,xr,yr,image_xscale,1,0,c_white,1); 
            if hasRazorback draw_sprite_ext(RazorBackS,team,xr,yr,image_xscale,1,0,c_white,1); 
            draw_sprite_ext(sprite_index,floor(animationImage+animationOffset),xr,yr,image_xscale,image_yscale,image_angle,c_white,1);
            draw_sprite_ext(sprite_index,floor(animationImage+animationOffset),xr,yr,image_xscale,image_yscale,image_angle,ubercolour,0.7);
            if hasBoots draw_sprite_ext(SniperBootsS,floor(animationImage)+team*2,xr,yr,image_xscale,1,0,ubercolour,1);
            if glowindex &lt; 9 glowindex += 0.3
            else glowindex = 0;
            draw_sprite_ext(CritGlowS,floor(glowindex),xr,yr,image_xscale,image_yscale,image_angle,ubercolour,0.7);
        } else if invisibeam {
            if buffbanner draw_sprite_ext(BackpackS,team,xr,yr,image_xscale,1,0,ubercolour,cloakAlpha);
            if hasDangershield draw_sprite_ext(DangerShieldS,team,xr,yr,image_xscale,1,0,c_white,cloakAlpha); 
            if hasRazorback draw_sprite_ext(RazorBackS,team,xr,yr,image_xscale,1,0,c_white,cloakAlpha); 
            draw_sprite_ext(sprite_index,floor(animationImage+animationOffset),xr,yr,image_xscale,image_yscale,image_angle,c_white,cloakAlpha);
            draw_sprite_ext(sprite_index,floor(animationImage+animationOffset),xr,yr,image_xscale,image_yscale,image_angle,ubercolour,min(0,cloakAlpha-0.2));
        }
    }
}
if (burnDuration &gt; 0 or burnIntensity &gt; 0) {
    for(i = 0; i &lt; numFlames * burnIntensity / maxIntensity; i += 1)
    {    
        if afterburnSource == WEAPON_PHLOG  draw_sprite_ext(PhlogBurnS, alarm[5] + i + random(2), x + flameArray_x[i], y + flameArray_y[i], 1, 1, 0, c_white, burnDuration / maxDuration * 0.71 + 0.35);
        else if frozen &lt;= 0 draw_sprite_ext(FlameS, alarm[5] + i + random(2), x + flameArray_x[i], y + flameArray_y[i], 1, 1, 0, c_white, burnDuration / maxDuration * 0.71 + 0.35);
        else  draw_sprite_ext(SnowflakeS, alarm[5] + i + random(2), x + flameArray_x[i], y + flameArray_y[i], 1, 1, 0, c_white, burnDuration / maxDuration * 0.71 + 0.35);
    }  
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
